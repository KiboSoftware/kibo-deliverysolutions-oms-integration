service: kibo-deliverysolutions-oms-integration
frameworkVersion: '3'		
useDotenv: true
provider:

  name: aws
  runtime: nodejs18.x
  environment:
    DYNAMODB_CONFIG_TABLE: ${self:service}-config-${sls:stage}
    EVENTBRIDGE_BUS_NAME: ${self:service}-${sls:stage}
    CONTENT_BUCKET_NAME: ${self:service}-${sls:stage}-website-bucket
    KIBO_HOME_HOST: ${env:KIBO_HOME_HOST}
    KIBO_CLIENT_ID: ${env:KIBO_CLIENT_ID}
    KIBO_CLIENT_SECRET: ${env:KIBO_CLIENT_SECRET}
    HOSTING_PATH: ${sls:stage, 'dev'}
  httpApi:
      cors: true
  iam:    
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_CONFIG_TABLE}"
        - Effect: Allow
          Action:
            - events:PutEvents
          Resource: "arn:aws:events:${aws:region}:*:event-bus/${self:provider.environment.EVENTBRIDGE_BUS_NAME}"
custom:
  client:
    bucketName: ${self:provider.environment.CONTENT_BUCKET_NAME}
    distributionFolder: config-ui/build
  esbuild:
    bundle: true
    sourcemap: true
    target: es2018  
    keepNames: true  # Add this line
functions:
  app:
    handler: src/express/index.handler
    timeout: 60 
    events: 
      - http:
          method: ANY   
          path: /{proxy+}
  dsWebhook:
    handler: src/producers/deliverySolutions.handler
    events:
      - http:
          path: /webhooks/ds
          method: post
  kiboWebhook:
    handler: src/producers/kibo.handler
    timeout: 60 
    events:
      - http:
          path: /webhooks/kibo
          method: post
  dsEventHandler:
    handler: src/consumers/deliverySolutions.handler
    timeout: 60 
    events:
      - eventBridge:
          eventBus: ${self:provider.environment.EVENTBRIDGE_BUS_NAME}
          pattern:
            source:
              - ds
  kiboEventHandler:
    handler: src/consumers/kibo.handler
    timeout: 60 
    events:
      - eventBridge:
          eventBus:  ${self:provider.environment.EVENTBRIDGE_BUS_NAME}
          pattern:
            source:
              - kibo  
resources:
  Resources:
    DynamoDbConfigTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_CONFIG_TABLE}
package:
  individually: true
  exclude:
    - config-ui/**
# plugins:
#   - serverless-esbuild
plugins:
  #- serverless-plugin-typescript
  #- serverless-scriptable-plugin
  - serverless-esbuild
  - serverless-lift
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-finch
  #- serverless-webpack




  


